name: Deploy to Kubernetes

on:
  push:
    tags:
      - 'v*' # Срабатывает при создании тега вида v1.0.0
    branches: [ main ]
    paths:
      - 'docker/**'
      - 'app/**' # Добавлен путь к манифестам

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker tag
      id: tag
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "TAG=latest" >> $GITHUB_ENV
        fi

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: ./docker
        file: ./docker/nginx-app.dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/diploma-nginx-app:${{ env.TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/diploma-nginx-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify Docker push
      run: |
        echo "Trying to pull pushed image..."
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/diploma-nginx-app:${{ env.TAG }}

    - name: Deploy to Kubernetes
      run: |
        # Обновляем образ в манифесте
        sed -i "s|image: .*/diploma-nginx-app:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/diploma-nginx-app:${{ env.TAG }}|g" app/app-deployment.yml

        # Применяем изменения
        kubectl apply -f app/app-deployment.yml

        # Принудительно триггерим обновление
        kubectl patch deployment diploma-app -n app -p \
          "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"$(date +%s)\"}}}}}"

        # Ждем обновления
        kubectl rollout status deployment/diploma-app -n app --timeout=180s

        # Проверяем поды
        kubectl get pods -n app -o wide

        # Проверяем сервис
        kubectl get svc -n app